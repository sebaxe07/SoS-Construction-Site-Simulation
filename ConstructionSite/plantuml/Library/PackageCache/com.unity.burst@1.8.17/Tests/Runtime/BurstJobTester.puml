@startuml
class BurstJobTester2 {
    + BurstJobTester2()
    + Dispose() : void
    + Calculate() : float
    + CheckFunctionPointer() : float
    + {static} Add2Numbers(a:float, b:float) : float
    + {static} Add2NumbersThrows(a:float, b:float) : float
}
struct MyJob {
    + Execute() : void
    + {static} CheckFmaSlow(a:float, b:float, c:float) : float
    + {static} CheckFmaFast(a:float, b:float, c:float) : float
}
struct MyJobAsync {
    + Execute() : void
}
struct MyJobWithDefaultOptimizations {
    + Execute() : void
}
struct MyJobCreatingAndDisposingNativeArray {
    + Length : int
    + Execute() : void
    + {static} DiscardFromManaged(result:int) : void
}
struct MyJobWithFastOptimizations {
    + Execute() : void
}
class "NativeArray`1"<T> {
}
IDisposable <|-- BurstJobTester2
BurstJobTester2 +-- MyJob
IJob <|-- MyJob
MyJob --> "Result<float>" "NativeArray`1"
BurstJobTester2 +-- MyJobAsync
IJob <|-- MyJobAsync
MyJobAsync --> "Result<float>" "NativeArray`1"
BurstJobTester2 +-- MyJobWithDefaultOptimizations
IJob <|-- MyJobWithDefaultOptimizations
MyJobWithDefaultOptimizations --> "Result<float>" "NativeArray`1"
BurstJobTester2 +-- MyJobCreatingAndDisposingNativeArray
IJob <|-- MyJobCreatingAndDisposingNativeArray
MyJobCreatingAndDisposingNativeArray --> "Result<int>" "NativeArray`1"
BurstJobTester2 +-- MyJobWithFastOptimizations
IJob <|-- MyJobWithFastOptimizations
MyJobWithFastOptimizations --> "Result<float>" "NativeArray`1"
@enduml
