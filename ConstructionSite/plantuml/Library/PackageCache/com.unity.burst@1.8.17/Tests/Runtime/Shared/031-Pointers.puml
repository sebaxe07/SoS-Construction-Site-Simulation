@startuml
class Pointers {
    + {static} CheckAddressOf(a:int) : int
    + {static} <<unsafe>> PointerCastEnum(value:int, newValue:MyCastEnum) : MyCastEnum
    + {static} <<unsafe>> PointerCompare(a:IntPtr, b:IntPtr) : bool
    + {static} <<unsafe>> RawPointerCompare(value:IntPtr) : bool
    + {static} <<unsafe>> PointerHash(value:IntPtr) : int
    + {static} <<unsafe>> PointerToPointer(value:IntPtr) : IntPtr
    + {static} <<unsafe>> PointerToString(value:IntPtr) : int
    + {static} <<unsafe>> PointerAdd(a:int) : int
    + {static} <<unsafe>> PointerSub(a:int) : int
    + {static} <<unsafe>> PointerPointerSub() : int
    + {static} <<unsafe>> WhileWithPointer() : int
    + {static} IntPtrConstructor(a:int) : IntPtr
    + {static} UIntPtrConstructor(a:uint) : UIntPtr
    + {static} IntPtrToInt32(a:int) : int
    + {static} IntPtrToInt64(a:int) : long
    + {static} IntPtrSize() : int
    + {static} IntPtrSizeCompared() : bool
    + {static} IntPtrZero() : IntPtr
    + {static} IntPtrAdd(a:IntPtr) : IntPtr
    + {static} IntPtrAdd2(a:IntPtr) : IntPtr
    + {static} IntPtrSub(a:IntPtr) : IntPtr
    + {static} IntPtrSub2(a:IntPtr) : IntPtr
    + {static} UIntPtrZero() : UIntPtr
    + {static} UIntPtrAdd(a:UIntPtr) : UIntPtr
    + {static} UIntPtrSubstract(a:UIntPtr) : UIntPtr
    + {static} <<unsafe>> PointerAccess(a:int) : int
    + {static} <<unsafe>> PointerAccess2(a:int) : int
    + {static} <<unsafe>> PointerAccess3(a:int) : float
    + {static} <<unsafe>> PointerCompareViaInt(a:int) : int
    + {static} <<unsafe>> IntPtrCompare(a:int) : int
    + {static} <<unsafe>> UnsafeCompare(a:int*, b:int) : int
    + {static} <<unsafe>> PointerCastWithStruct() : void
    + {static} <<unsafe>> FixedField() : int
    + {static} <<unsafe>> FixedFieldViaPointer(fixedStruct:MyStructWithFixed, i:int) : int
    + {static} <<unsafe>> FixedInt32AndRefInt32(fixedStruct:MyStructWithFixed) : int
    + {static} <<unsafe>> TestConditionalPointer(job:PointerConditional) : bool
    + {static} <<unsafe>> TestCellVisibleInternal(length:int) : void
    + {static} <<unsafe>> InitialiseViaCastedPointer() : int
    + {static} <<unsafe>> PointerWriteArg(a:int) : int
    + {static} TestBlobAssetReferenceData() : void
    + {static} <<unsafe>> StackAllocAliasCheck(stackAllocCheck:StackAllocCheck) : bool
    + {static} <<unsafe>> NativeIntAddCheck(a:int) : int
    + {static} <<unsafe>> TestArithmeticPointerA(job:PointerArithmetic) : Int64
    + {static} <<unsafe>> TestArithmeticPointerB(job:PointerArithmetic) : Int64
    + {static} <<unsafe>> TestArithmeticPointerC(job:PointerArithmetic) : Int64
    + {static} <<unsafe>> TestArithmeticPointerD(job:PointerArithmetic) : Int64
    + {static} <<unsafe>> TestPointerWithIn() : int
    + {static} <<unsafe>> TestSystemBufferMemoryCopy() : int
    + {static} <<unsafe>> PointerMathAddPNTypesByte(p:UInt64, a:byte) : IntPtr
    + {static} <<unsafe>> PointerMathAddNPTypesByte(p:UInt64, a:byte) : IntPtr
    + {static} <<unsafe>> PointerMathSubPNTypesByte(p:UInt64, a:byte) : IntPtr
    + {static} <<unsafe>> PointerMathAddPNTypesSByte(p:UInt64, a:sbyte) : IntPtr
    + {static} <<unsafe>> PointerMathAddNPTypesSByte(p:UInt64, a:sbyte) : IntPtr
    + {static} <<unsafe>> PointerMathSubPNTypesSByte(p:UInt64, a:sbyte) : IntPtr
    + {static} <<unsafe>> PointerMathAddPNTypesShort(p:UInt64, a:short) : IntPtr
    + {static} <<unsafe>> PointerMathAddNPTypesShort(p:UInt64, a:short) : IntPtr
    + {static} <<unsafe>> PointerMathSubPNTypesShort(p:UInt64, a:short) : IntPtr
    + {static} <<unsafe>> PointerMathAddPNTypesUShort(p:UInt64, a:ushort) : IntPtr
    + {static} <<unsafe>> PointerMathAddNPTypesUShort(p:UInt64, a:ushort) : IntPtr
    + {static} <<unsafe>> PointerMathSubPNTypesUShort(p:UInt64, a:ushort) : IntPtr
    + {static} <<unsafe>> PointerMathAddPNTypesInt(p:UInt64, a:int) : IntPtr
    + {static} <<unsafe>> PointerMathAddNPTypesInt(p:UInt64, a:int) : IntPtr
    + {static} <<unsafe>> PointerMathSubPNTypesInt(p:UInt64, a:int) : IntPtr
    + {static} <<unsafe>> PointerMathAddPNTypesUInt(p:UInt64, a:uint) : IntPtr
    + {static} <<unsafe>> PointerMathAddNPTypesUInt(p:UInt64, a:uint) : IntPtr
    + {static} <<unsafe>> PointerMathSubPNTypesUInt(p:UInt64, a:uint) : IntPtr
    + {static} <<unsafe>> PolongerMathAddPNTypesLong(p:UInt64, a:long) : IntPtr
    + {static} <<unsafe>> PolongerMathAddNPTypesLong(p:UInt64, a:long) : IntPtr
    + {static} <<unsafe>> PolongerMathSubPNTypesLong(p:UInt64, a:long) : IntPtr
    + {static} <<unsafe>> PolongerMathAddPNTypesULong(p:UInt64, a:ulong) : IntPtr
    + {static} <<unsafe>> PolongerMathAddNPTypesULong(p:UInt64, a:ulong) : IntPtr
    + {static} <<unsafe>> PolongerMathSubPNTypesULong(p:UInt64, a:ulong) : IntPtr
}
struct MyIntValue {
    + MyIntValue(value:int)
    + Value : int
    + <<unsafe>> GetValuePtr() : ref int
}
struct StructForPointerPointerSub {
    + A : int
    + B : int
}
struct NativeQueueBlockHeader {
    + itemsInBlock : int
}
class IntPtrZeroProvider {
    + Value : object <<get>>
}
class IntPtrOneProvider {
    + Value : object <<get>>
}
struct ConditionalTestStruct {
}
struct PointerConditional {
    + Execute() : void
    + Dispose() : void
}
struct StructWithFields {
    + a : int
    + b : int
    + c : bool
    + d : bool
    + e : bool
    + f : bool
}
struct MyStructWithFixed {
    + <<fixed>> Values : int
    + Value : int
}
struct MyStructWithFixedProvider {
    + <<unsafe>> Value : object <<get>>
}
enum MyCastEnum {
    Value0= 0,
    Value1= 1,
    Value2= 2,
    Value3= 3,
}
struct CheckPointers {
    + X : int
    + Y : int
    + Z : int
    + W : int
}
struct BlobAssetHeader {
    + Length : int
}
struct BlobAssetReferenceData {
    + BlobAssetReferenceData(zero:IntPtr)
    + Validate() : void
}
struct StackAllocCheck {
    + AddToPtr(otherPtr:int*) : void
}
struct PointerArithmetic {
    + Execute() : void
    + Dispose() : void
}
struct TestData {
    + Size : int
}
struct Provider {
    + Value : object <<get>>
}
class Provider {
    + Value : object <<get>>
}
struct Provider {
    + Value : object <<get>>
}
Pointers +-- MyIntValue
Pointers +-- StructForPointerPointerSub
Pointers +-- NativeQueueBlockHeader
Pointers +-- IntPtrZeroProvider
IArgumentProvider <|-- IntPtrZeroProvider
Pointers +-- IntPtrOneProvider
IArgumentProvider <|-- IntPtrOneProvider
Pointers +-- ConditionalTestStruct
Pointers +-- PointerConditional
IJob <|-- PointerConditional
IDisposable <|-- PointerConditional
Pointers +-- StructWithFields
Pointers +-- MyStructWithFixed
Pointers +-- MyStructWithFixedProvider
IArgumentProvider <|-- MyStructWithFixedProvider
Pointers +-- MyCastEnum
Pointers +-- CheckPointers
Pointers +-- BlobAssetHeader
BlobAssetHeader --> "Allocator" Allocator
Pointers +-- BlobAssetReferenceData
Pointers +-- StackAllocCheck
Pointers +-- PointerArithmetic
IJob <|-- PointerArithmetic
IDisposable <|-- PointerArithmetic
Pointers +-- TestData
TestData --> "Min" int3
PointerConditional +-- Provider
IArgumentProvider <|-- Provider
StackAllocCheck +-- Provider
IArgumentProvider <|-- Provider
PointerArithmetic +-- Provider
IArgumentProvider <|-- Provider
@enduml
